{"version":3,"sources":["redux/actions.js","redux/operations.js","redux/contacts-selectors.js","conponents/ContactForm.js","conponents/Filter.js","conponents/ContactList.view.js","conponents/ContactList.container.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","filterContact","axios","defaults","baseURL","getItems","state","contacts","items","getFilter","filter","contact","name","toLowerCase","includes","ContactForm","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","id","uuidv4","props","find","item","toUpperCase","alert","onSubmit","this","style","width","padding","border","type","onChange","React","Component","connect","contactSelectors","dispatch","actions","post","then","data","catch","error","addContact","textFilter","display","ContactList","onDelete","map","onClick","marginLeft","delete","App","fetchContact","className","textAlign","margin","get","itemsReduсer","createReducer","action","payload","filterReduсer","_","contactsReduсer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","next","console","log","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c4fb51.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('APP/FETCH_CONTACT_REQUEST');\r\nexport const fetchContactSuccess = createAction('APP/FETCH_CONTACT_SUCCESS');\r\nexport const fetchContactError = createAction('APP/FETCH_CONTACT_ERROR');\r\n\r\nexport const addContactRequest = createAction('APP/ADD_CONTACT_REQUEST');\r\nexport const addContactSuccess = createAction('APP/ADD_CONTACT_SUCCESS');\r\nexport const addContactError = createAction('APP/ADD_CONTACT_ERROR');\r\n\r\nexport const delContactRequest = createAction('APP/DEL_CONTACT_REQUEST');\r\nexport const delContactSuccess = createAction('APP/DEL_CONTACT_SUCCESS');\r\nexport const delContactError = createAction('APP/DEL_CONTACT_ERROR');\r\n\r\nexport const filterContact = createAction('APP/FILTER_CONTACT');\r\n","import axios from 'axios';\r\nimport * as actions from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContact = () => dispatch => {\r\n  dispatch(actions.fetchContactRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = item => dispatch => {\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post('/contacts', item)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const delContact = id => dispatch => {\r\n  dispatch(actions.delContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.delContactSuccess(id)))\r\n    .catch(error => dispatch(actions.delContactError(error)));\r\n};\r\n","const getItems = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst visibleContacts = state => {\r\n  const filter = getFilter(state);\r\n  const contacts = getItems(state);\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nexport default {\r\n  getItems,\r\n  getFilter,\r\n  visibleContacts,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContact } from '../redux/operations';\r\nimport contactSelectors from '../redux/contacts-selectors';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    if (\r\n      this.props.items.find(\r\n        item => item.name.toUpperCase() === this.state.name.toUpperCase(),\r\n      )\r\n    ) {\r\n      alert(this.state.name + ' is already in contacts');\r\n    } else {\r\n      this.props.onSubmit(contact);\r\n      this.setState({ name: '', number: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.handleSubmit}\r\n        style={{\r\n          width: '200px',\r\n          padding: '10px',\r\n          border: '1px solid black',\r\n        }}\r\n      >\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"Submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  items: contactSelectors.getItems(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: item => dispatch(addContact(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\nimport contactSelectors from '../redux/contacts-selectors';\r\n\r\nconst Filter = ({ textFilter, onChange }) => (\r\n  <label>\r\n    Find contact by name\r\n    <input\r\n      style={{ display: 'block' }}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={textFilter}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  textFilter: contactSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.filterContact(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button onClick={() => onDelete(id)} style={{ marginLeft: '20px' }}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../redux/operations';\r\nimport contactSelectors from '../redux/contacts-selectors';\r\nimport ContactList from './ContactList.view';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactSelectors.visibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(actions.delContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ContactForm from './conponents/ContactForm';\nimport Filter from './conponents/Filter';\nimport ContactList from './conponents/ContactList.container';\nimport { fetchContact } from './redux/operations';\nimport './App.css';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.fetchContact();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ textAlign: 'left', margin: '20px' }}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contact</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContact: () => dispatch(fetchContact()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactSuccess,\r\n  addContactSuccess,\r\n  delContactSuccess,\r\n  filterContact,\r\n} from './actions';\r\n\r\nconst itemsReduсer = createReducer([], {\r\n  [fetchContactSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [action.payload, ...state],\r\n  [delContactSuccess]: (state, action) =>\r\n    state.filter(item => item.id !== action.payload),\r\n});\r\n\r\nconst filterReduсer = createReducer('', {\r\n  [filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReduсer = combineReducers({\r\n  items: itemsReduсer,\r\n  filter: filterReduсer,\r\n});\r\n\r\nexport default contactsReduсer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\nimport contactsReduсer from './reducer';\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [\r\n//       { id: 1, name: 'ffff', number: '1111' },\r\n//       { id: 2, name: 'fffd', number: '2222' },\r\n//     ],\r\n//     filter: 'ff',\r\n//   },\r\n// };\r\n\r\n// const itemsPersistConfig = {\r\n//   key: 'items',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\nconst myMiddlware = store => next => action => {\r\n  console.log('dasdadads', action);\r\n  next(action);\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  myMiddlware,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReduсer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}